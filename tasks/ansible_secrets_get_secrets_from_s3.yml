---

- name: Make sure there is no existing file called {{ playbook_dir }}/{{ item.value.directory }}/{{ item.value.file }}
  file:
    path: "{{ playbook_dir }}/{{ item.value.directory }}/{{ item.value.file }}"
    state: absent
  with_dict: "{{ ansible_secrets_dict }}"

- name: Copy config file {{ item.value.file }} from {{ item.value.url }} to {{ playbook_dir }}/{{ item.value.directory }}/{{ item.value.file }}
  command: "{{ ansible_aws_paths.aws }} s3 cp {{ item.value.url }} {{ playbook_dir }}/{{ item.value.directory }}/{{ item.value.file }}"
  register: result
  with_dict: "{{ ansible_secrets_dict }}"
  
- name: Check if {{ playbook_dir }}/{{ item.value.directory }}/{{ item.value.file }} exists
  stat:
    path: "{{ playbook_dir }}/{{ item.value.directory }}/{{ item.value.file }}"
  register: ansible_secrets_file_info
  with_dict: "{{ ansible_secrets_dict }}"

- name: Fail if {{ item.item }} file doesn't exist
  fail: msg="{{ item.item }} doesn't exist"
  when: not item.stat.exists
  with_items: "{{ ansible_secrets_file_info.results }}"
  
- name: Set the owner/group on {{ playbook_dir }}/{{ item.value.directory }}/{{ item.value.file }}
  file:
    path: "{{ playbook_dir }}/{{ item.value.directory }}/{{ item.value.file }}"
    owner: "{{ ansible_secrets_username }}"
    group: "{{ ansible_secrets_username }}"
    mode: 0400
  with_dict: "{{ ansible_secrets_dict }}"




